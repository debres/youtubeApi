AIzaSyAiz9Xy2w4P8wKwiu0aJZ5v2Es90E42K2g

main: "font-family: 'Oswald', sans-serif;",
slanted: "font-family: 'Lato', sans-serif;"

<div>
<iframe width="480"
        height="320"
        src={`https://www.youtube.com/embed/${id}`}
        frameBorder="0"
        allowFullScreen
        title='title' />
</div>



const mapDispatchToProps = (dispatch) => {
  return {
    formSubmitHendeler: (event) => {
      event.preventDefault();
    },
    inputChangeHandeler: (event) => {
      event.preventDefault();
      dispatch({type: 'SEARCH_INPUT_CHANGE', surfing: event.target.value })
    },
    keyPressHendeler: (event) => {
      event.preventDefault();
      if (event.key === 'Enter') {

      }
    },
    buttonClickHendeler: (event) => {
      event.preventDefault();
    }
  }
}



{{pathname: "/SinglePage", state: metaData }}


window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()


export const search = (surfinsg) => {
  return axios.get(`search?part=snippet&maxResults=25&type=video&key=${apiKey}&q=${surfinsg}`)
          .then((responce) => responce.data.items)
};

export const relatedVideo = (id) => {
  return axios.get(`search?part=snippet&maxResults=5&type=video&key=${apiKey}&relatedToVideoId=${id}`)
          .then((responce) => responce.data.items)
};

export const relatedComments = (id) => {
  return axios.get(`commentThreads?part=snippet%2Creplies&key=${apiKey}&videoId=${id}`)
          .then((responce) => responce.data.items)
};


export const makeRequestHipster = surfing => dispatch => {
  return search(surfing)
    .then(searchRes =>
      dispatch({
        type: 'FETCH_DATA_SUCCESS',
        videItems: searchRes
      })
    ).catch(error => {
      dispatch({
        type: 'FETCH_DATA_ERROR',
        videItems: error
      })
    })
}  })
}
